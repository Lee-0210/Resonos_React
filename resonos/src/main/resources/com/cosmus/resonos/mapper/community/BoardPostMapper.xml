<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cosmus.resonos.mapper.community.BoardPostMapper">

  <resultMap id="BoardPostResultMap" type="com.cosmus.resonos.domain.community.BoardPost">
    <id property="id" column="id"/>
    <result property="title" column="title"/>
    <result property="content" column="content"/>
    <result property="type" column="type"/>
    <result property="createdAt" column="created_at"/>
    <result property="communityId" column="community_id"/>
    <result property="userId" column="user_id"/>
    <result property="views" column="views"/>

    <association property="community" javaType="com.cosmus.resonos.domain.community.Community">
        <id property="id" column="community_id"/>
        <result property="name" column="community_name"/>
    </association>

  </resultMap>

  <select id="list" resultMap="BoardPostResultMap">
    SELECT * FROM board_post ORDER BY created_at DESC
  </select>

  <select id="select" resultMap="BoardPostResultMap">
    SELECT *
    FROM board_post
    WHERE id = #{id}
  </select>

  <insert id="insert">
    INSERT INTO board_post (title, content, type, created_at, community_id, user_id, views)
    VALUES (#{title}, #{content}, #{type}, #{createdAt}, #{communityId}, #{userId}, #{views})
  </insert>

  <update id="update">
    UPDATE board_post
    SET title = #{title},
        content = #{content},
        type = #{type},
        community_id = #{communityId},
        user_id = #{userId},
        views = #{views}
    WHERE id = #{id}
  </update>

  <delete id="delete">
    DELETE FROM board_post WHERE id = #{id}
  </delete>

  <select id="findByCommunity" resultMap="BoardPostResultMap">
    SELECT * FROM board_post WHERE community_id = #{communityId} ORDER BY created_at DESC
  </select>

  <select id="countAll" resultType="int">
    SELECT COUNT(*) FROM report
  </select>

  <select id="countByUserId" resultType="int">
    SELECT COUNT(*) FROM board_post WHERE user_id = #{userId}
  </select>

  <select id="selectWithLikesDislikes" resultMap="BoardPostResultMap">
    SELECT
      bp.*,
      u.nickname AS user_nickname,
      (SELECT COUNT(*)
        FROM likes_dislikes ld
        WHERE ld.type = 'post' AND ld.target_id = bp.id AND ld.is_likes = 1)
      AS post_likes,
      (SELECT COUNT(*)
        FROM likes_dislikes ld
        WHERE ld.type = 'post' AND ld.target_id = bp.id AND ld.is_likes = 0)
      AS post_dislikes
    FROM board_post bp
    LEFT JOIN users AS u ON u.id = bp.user_id
    WHERE bp.id = #{id}
  </select>

  <!-- 커뮤 메인 -->
  <select id="selectHotPosts" resultMap="BoardPostResultMap">
    SELECT id, title, content, type, created_at, community_id, user_id, views
    FROM board_post
    ORDER BY views DESC
    LIMIT #{limit}
  </select>

  <select id="selectAll" resultMap="BoardPostResultMap">
    SELECT bp.*, c.name AS community_name
    FROM board_post bp
    LEFT JOIN community c ON bp.community_id = c.id
    ORDER BY bp.created_at DESC
  </select>

  <select id="selectPopularPosts" resultMap="BoardPostResultMap">
    SELECT bp.*, c.name AS community_name
    FROM board_post bp
    LEFT JOIN community c ON bp.community_id = c.id
    ORDER BY bp.views DESC, bp.created_at DESC
  </select>

  <select id="selectRealTimePopularPosts" resultMap="BoardPostResultMap">
    SELECT *
    FROM board_post
    <!-- 72시간 -->
    WHERE created_at >= NOW() - INTERVAL 72 HOUR
    ORDER BY views DESC, created_at DESC
  </select>

  <select id="searchPosts" resultMap="BoardPostResultMap" parameterType="string">
    SELECT * FROM board_post
    <where>
      <if test="query != null and query.trim() != ''">
        (title LIKE CONCAT('%', #{query}, '%')
        OR content LIKE CONCAT('%', #{query}, '%'))
      </if>
    </where>
    ORDER BY created_at DESC
  </select>


  <select id="selectByCategoryId" resultMap="BoardPostResultMap">
    SELECT * FROM board_post
    WHERE category_id = #{categoryId}
    ORDER BY created_at DESC
  </select>

  <select id="selectNoticesByCategoryId" resultMap="BoardPostResultMap">
    SELECT * FROM board_post
    WHERE category_id = #{categoryId} AND is_notice = 1
    ORDER BY created_at DESC
    LIMIT #{limit}
  </select>


</mapper>
