<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.cosmus.resonos.mapper.community.CommentMapper">

  <resultMap id="CommentResultMap" type="com.cosmus.resonos.domain.community.Comment">
    <id property="id" column="id"/>
    <result property="content" column="content"/>
    <result property="type" column="type"/>
    <result property="targetId" column="target_id"/>
    <result property="createdAt" column="created_at"/>
    <result property="userId" column="user_id"/>
    <result property="boardPostId" column="board_post_id"/>
    <result property="parentCommentId" column="parent_comment_id"/>
    <result property="communityId" column="community_id"/>
    <result property="userNickname" column="user_nickname"/>
    <result property="commentLikes" column="comment_likes"/>
    <result property="commentDislikes" column="comment_dislikes"/>
  </resultMap>

  <select id="list" resultType="com.cosmus.resonos.domain.community.Comment">
    SELECT * FROM comment
  </select>

  <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO comment (content, type, target_id, created_at, user_id)
    VALUES (#{content}, #{type}, #{targetId}, #{createdAt}, #{userId})
  </insert>

  <update id="update">
    UPDATE comment
    SET content = #{content},
        type = #{type},
        target_id = #{targetId},
        user_id = #{userId}
    WHERE id = #{id}
  </update>

  <delete id="delete">
    DELETE FROM comment WHERE id = #{id}
  </delete>

  <select id="findByTarget" resultMap="CommentResultMap">
    SELECT * FROM comment WHERE type = #{type} AND target_id = #{targetId} ORDER BY created_at DESC
  </select>

  <select id="select" resultMap="CommentResultMap">
    SELECT * FROM comment WHERE id = #{id}
  </select>

  <select id="countByUserId" resultType="int">
    SELECT COUNT(*) FROM comment WHERE user_id = #{userId}
  </select>

  <select id="selectWithLikesDislikes" resultMap="CommentResultMap">
    SELECT 
      c.*,
      u.nickname AS user_nickname,
      (SELECT COUNT(*)
        FROM likes_dislikes ld
        WHERE ld.type = 'comment'
          AND ld.target_id = c.id
          AND ld.is_likes = 1
      ) AS comment_likes,
      (SELECT COUNT(*)
        FROM likes_dislikes ld
        WHERE ld.type = 'comment'
          AND ld.target_id = c.id
          AND ld.is_likes = 0
      ) AS comment_dislikes
    FROM comment c
    LEFT JOIN user u ON u.id = c.user_id
    WHERE c.board_post_id = #{postId}
    ORDER BY c.created_at DESC
  </select>

</mapper>
