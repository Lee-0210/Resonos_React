<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cosmus.resonos.mapper.community.CommunityMapper">

  <resultMap id="CommunityResultMap" type="com.cosmus.resonos.domain.community.Community">
      <id property="id" column="id"/>
      <result property="categoryId" column="category_id"/>
      <result property="creatorId" column="creator_id"/>
      <result property="name" column="name"/>
      <result property="description" column="description"/>
      <result property="createdAt" column="created_at"/>
      <result property="trackId" column="track_id"/>
      <result property="intro" column="intro"/>
      <!-- user 테이블의 nickname을 가져와서 creatorName에 매핑 -->
      <result property="creatorName" column="creator_name"/>
  </resultMap>

  <select id="list" resultType="Community">
    SELECT * FROM community
  </select>

  <insert id="insert">
    INSERT INTO community (name, description, created_at, updated_at, track_id)
    VALUES (#{name}, #{description}, NOW(), NOW(), #{trackId})
    FROM community
  </insert>

  <update id="update">
    UPDATE community SET
      name = #{name},
      description = #{description},
      updated_at = NOW(),
      track_id = #{trackId}
    WHERE id = #{id}
    FROM community
  </update>

  <delete id="delete">
    DELETE FROM community WHERE id = #{id}
  </delete>

  <update id="completeAll">
    UPDATE community SET
      status = 'completed'
    WHERE status = 'in_progress'
  </update>

  <delete id="deleteAll">
    DELETE FROM community
  </delete>

  <!-- select  -->
  <select id="select" resultMap="CommunityResultMap">
      SELECT 
          c.*,
          u.nickname AS creator_name
      FROM community c
      LEFT JOIN user u ON c.creator_id = u.id
      WHERE c.id = #{id}
  </select>

  <update id="setTrack">
    UPDATE community SET
      track_id = #{trackId}
    WHERE id = #{communityId}
  </update>

  <!-- 한줄 소개 설정 -->
  <update id="setIntro">
    UPDATE community SET
      intro = #{intro}
    WHERE id = #{communityId}
  </update>

  <select id="selectById" resultType="Community">
    SELECT * FROM community WHERE id = #{id}
  </select>

  <!-- 게시판 순위 Top5 - communityService -->
  <select id="getTopCommunities" resultType="Community">
    SELECT bp.*     
    FROM board_post bp
    LEFT JOIN community c ON bp.community_id = c.id
    WHERE bp.community_id = #{communityId}
    ORDER BY bp.created_at DESC
  </select>

  <!-- 신설 게시판 - communityService -->
  <select id="getNewCommunities" resultType="Community">
    SELECT *
    FROM community
    ORDER BY created_at DESC
    LIMIT #{limit}
  </select>

  <!-- 모든 커뮤니티 조회 -->
  <select id="getAllCommunities" resultType="Community">
    SELECT *
    FROM community
  </select>

  <!-- 모든 커뮤니티 + 키워드 -->
  <select id="searchCommunities" resultType="Community">
    SELECT c.*
    FROM community c
    <where>
      <if test="query != null and query.trim() != ''">
        (bp.title LIKE CONCAT('%', #{query}, '%')
        OR bp.content LIKE CONCAT('%', #{query}, '%'))
      </if>
    </where>
    ORDER BY c.created_at DESC
  </select>

</mapper>